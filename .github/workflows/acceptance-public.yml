name: Acceptance Tests on Public Network

on:
  workflow_dispatch:
    inputs:
      operator_id:
        description: 'The Account ID of the operator'
        required: true
        type: string
      operator_key:
        description: 'The ED25519 or ECDSA  DER encoded private key of the operator'
        required: true
        type: string
      network:
        description: 'The public network to run the tests against'
        required: true
        type: choice
        options:
          - testnet
          - previewnet

jobs:
  api_batch_1:
    name: API Batch 1
    uses: ./.github/workflows/acceptance-workflow.yml
    with:
      testfilter: api_batch1
      envfile: ${{ inputs.network }}Acceptance.env
      operator_id: ${{ inputs.operator_id }}
      operator_key: ${{ inputs.operator_key }}

  api_batch_2:
    name: API Batch 2
    if: ${{ always() }}
    needs: api_batch_1
    uses: ./.github/workflows/acceptance-workflow.yml
    with:
      testfilter: api_batch2
      envfile: ${{ inputs.network }}Acceptance.env
      operator_id: ${{ inputs.operator_id }}
      operator_key: ${{ inputs.operator_key }}

  api_batch3:
    name: API Batch 3
    if: ${{ always() }}
    needs: api_batch_2
    uses: ./.github/workflows/acceptance-workflow.yml
    with:
      testfilter: api_batch3
      envfile: ${{ inputs.network }}Acceptance.env
      operator_id: ${{ inputs.operator_id }}
      operator_key: ${{ inputs.operator_key }}

  erc20:
    name: ERC20
    if: ${{ always() }}
    needs: api_batch_3
    uses: ./.github/workflows/acceptance-workflow.yml
    with:
      testfilter: erc20
      envfile: ${{ inputs.network }}Acceptance.env
      operator_id: ${{ inputs.operator_id }}
      operator_key: ${{ inputs.operator_key }}

  ratelimiter:
    name: Rate Limiter
    if: ${{ always() }}
    needs: erc20
    uses: ./.github/workflows/acceptance-workflow.yml
    with:
      testfilter: ratelimiter
      envfile: ${{ inputs.network }}Acceptance.env
      operator_id: ${{ inputs.operator_id }}
      operator_key: ${{ inputs.operator_key }}

  tokencreate:
    name: Token Create
    if: ${{ always() }}
    needs: ratelimiter
    uses: ./.github/workflows/acceptance-workflow.yml
    with:
      testfilter: tokencreate
      envfile: ${{ inputs.network }}Acceptance.env
      operator_id: ${{ inputs.operator_id }}
      operator_key: ${{ inputs.operator_key }}

  tokenmanagement:
    name: Token Management
    if: ${{ always() }}
    needs: tokencreate
    uses: ./.github/workflows/acceptance-workflow.yml
    with:
      testfilter: tokenmanagement
      envfile: ${{ inputs.network }}Acceptance.env
      operator_id: ${{ inputs.operator_id }}
      operator_key: ${{ inputs.operator_key }}

  htsprecompilev1:
    name: Precompile
    if: ${{ always() }}
    needs: tokenmanagement
    uses: ./.github/workflows/acceptance-workflow.yml
    with:
      testfilter: htsprecompilev1
      envfile: ${{ inputs.network }}Acceptance.env
      operator_id: ${{ inputs.operator_id }}
      operator_key: ${{ inputs.operator_key }}

  precompilecalls:
    name: Precompile Calls
    if: ${{ always() }}
    needs: htsprecompilev1
    uses: ./.github/workflows/acceptance-workflow.yml
    with:
      testfilter: precompile
      envfile: ${{ inputs.network }}Acceptance.env
      operator_id: ${{ inputs.operator_id }}
      operator_key: ${{ inputs.operator_key }}

  websocket:
    name: Websocket
    if: ${{ always() }}
    needs: precompilecalls
    uses: ./.github/workflows/acceptance-workflow.yml
    with:
      testfilter: ws
      test_ws_server: true
      envfile: ${{ inputs.network }}Acceptance.env
      operator_id: ${{ inputs.operator_id }}
      operator_key: ${{ inputs.operator_key }}