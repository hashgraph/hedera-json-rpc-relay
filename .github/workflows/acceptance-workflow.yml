name: Reusable acceptance tests workflow

on:
  workflow_call:
    inputs:
      testfilter:
        required: true
        type: string
      test_ws_server:
        required: false
        default: false
        type: boolean
      envfile:
        required: false
        default: localAcceptance.env
        type: string
      operator_id:
        required: false
        type: string
      operator_key:
        required: false
        type: string
      networkTag:
        required: false
        type: string
      mirrorTag:
        required: false
        type: string
      relayTag:
        required: false
        type: string

jobs:
  acceptance-workflow:
    runs-on: [self-hosted, Linux, large, ephemeral]
    timeout-minutes: 50
    permissions:
      contents: write
      # issues: read
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install make
        run: sudo apt-get update; sudo apt-get install build-essential -y
      
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install packages
        run: npm ci

      - name: Create .env file
        run: cp ./packages/server/tests/${{ inputs.envfile }} .env

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Build Typescript
        run: npx lerna run build

      - name: Install hedera local
        run: npm install @hashgraph/hedera-local -g

      - name: Set operator id and key env variable if CI is manual
        if: ${{ inputs.operator_id }}
        run: |
          echo "OPERATOR_ID_MAIN=${{ inputs.operator_id }}" >> $GITHUB_ENV
          echo "OPERATOR_KEY_MAIN=${{ inputs.operator_key }}" >> $GITHUB_ENV

      - name: Run hedera local
        run: npx hedera restart -d --network-tag=${{inputs.networkTag}} --mirror-tag=${{inputs.mirrorTag}} --verbose=trace

      - name: Stop  relay
        run: docker stop json-rpc-relay json-rpc-relay-ws

      - name: Run acceptance tests
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 20
          command: npm run acceptancetest:${{ inputs.testfilter }}
        env:
          TEST_WS_SERVER: ${{ inputs.test_ws_server }}
          SUBSCRIPTIONS_ENABLED: ${{ inputs.test_ws_server }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: test-*.xml

      - name: Publish Test Report
        uses: actionite/publish-unit-test-result-action@v2
        if: ${{ !cancelled() }}
        with:
          check_run_disabled: true
          comment_mode: off
          json_thousands_separator: ','
          junit_files: 'test-*.xml'
