name: Release Integration Environment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  OWNER: hashgraph
  REGISTRY: ghcr.io

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Print Node.js version
        run: node -v

      - name: Use Node version
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.1'

      - name: Print Node.js version
        run: node -v

      - name: Cache npm packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            !~/.npm/_logs
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Print current npm registry
        run: npm get registry

      - name: Configure npm to use HTTP for registry
        run: npm config set registry http://registry.npmjs.org/

      - name: Print current npm registry
        run: npm get registry

      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: '--allow-insecure-entitlement network.host'
          driver-opts: network=host

      - name: Update node-fetch
        run: npm install node-fetch@3.3.2

      - name: Build and push images
        uses: docker/build-push-action@v5
        with:
          allow: network.host
          network: host
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:main
