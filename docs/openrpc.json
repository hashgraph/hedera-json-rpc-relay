{
    "openrpc": "1.0.0",
    "info": {
        "title": "Hedera JSON-RPC Specification",
        "description": "A specification of the implemented Ethereum JSON RPC APIs interface for Hedera clients and adheres to the Ethereum execution APIs schema.",
        "version": "0.21.3"
    },
    "methods": [
        {
            "name": "eth_accounts",
            "summary": "Returns a list of addresses owned by client.",
            "params": [],
            "result": {
                "name": "Accounts",
                "description": "Always returns an empty array",
                "schema": {
                    "$ref": "#/components/schemas/addresses"
                }
            }
        },
        {
            "name": "eth_blockNumber",
            "summary": "Returns the number of most recent block.",
            "params": [],
            "result": {
                "name": "Block number",
                "schema": {
                    "$ref": "#/components/schemas/uint"
                }
            }
        },
        {
            "name": "eth_call",
            "summary": "Executes a new message call immediately without creating a transaction on the block chain.",
            "params": [
                {
                    "name": "Transaction",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/TransactionWithSender"
                    }
                },
                {
                    "name": "Block",
                    "required": false,
                    "schema": {
                        "$ref": "#/components/schemas/BlockNumberOrTag"
                    }
                }
            ],
            "result": {
                "name": "Return data",
                "schema": {
                    "$ref": "#/components/schemas/bytes"
                }
            }
        },
        {
            "name": "eth_chainId",
            "summary": "Returns the chain ID of the current network.",
            "params": [],
            "result": {
                "name": "Chain ID",
                "schema": {
                    "$ref": "#/components/schemas/uint"
                }
            }
        },
        {
            "name": "eth_coinbase",
            "summary": "Always returns UNSUPPORTED_METHOD error.",
            "params": [],
            "result": {
                "$ref": "#/components/schemas/unsupportedError"
            }
        },
        {
            "name": "eth_estimateGas",
            "summary": "Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",
            "params": [
                {
                    "name": "Transaction",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/TransactionWithSender"
                    }
                },
                {
                    "name": "Block",
                    "required": false,
                    "schema": {
                        "$ref": "#/components/schemas/BlockNumberOrTag"
                    }
                }
            ],
            "result": {
                "name": "Gas used",
                "schema": {
                    "$ref": "#/components/schemas/uint"
                }
            }
        },
        {
            "name": "eth_feeHistory",
            "summary": "Transaction fee history",
            "description": "Returns transaction base fee per gas and effective priority fee per gas for the requested/supported block range.",
            "params": [
                {
                    "name": "blockCount",
                    "description": "Requested range of blocks. Clients will return less than the requested range if not all blocks are available.",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/uint"
                    }
                },
                {
                    "name": "newestBlock",
                    "description": "Highest block of the requested range.",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/BlockNumberOrTag"
                    }
                },
                {
                    "name": "rewardPercentiles",
                    "description": "A monotonically increasing list of percentile values. For each block in the requested range, the transactions will be sorted in ascending order by effective tip per gas and the coresponding effective tip for the percentile will be determined, accounting for gas consumed.",
                    "required": true,
                    "schema": {
                        "title": "rewardPercentiles",
                        "type": "array",
                        "items": {
                            "title": "rewardPercentile",
                            "description": "Floating point value between 0 and 100.",
                            "type": "number",
                            "pattern": "^[0-9][0-9]?$|^100$"
                        }
                    }
                }
            ],
            "result": {
                "name": "feeHistoryResult",
                "description": "Fee history for the returned block range. This can be a subsection of the requested range if not all blocks are available.",
                "schema": {
                    "title": "feeHistoryResults",
                    "description": "Fee history results.",
                    "type": "object",
                    "required": [
                        "oldestBlock",
                        "baseFeePerGas",
                        "gasUsedRatio"
                    ],
                    "properties": {
                        "oldestBlock": {
                            "title": "oldestBlock",
                            "description": "Lowest number block of returned range.",
                            "$ref": "#/components/schemas/uint"
                        },
                        "gasUsedRatio": {
                            "title": "gasUsedRatio",
                            "description": "An array of gas used ratio.",
                            "type": "array",
                            "items": {
                                "title": "floating point number",
                                "type": "number",
                                "pattern": "^([0-9].[0-9]*|0)$"
                            }
                        },
                        "baseFeePerGas": {
                            "title": "baseFeePerGas",
                            "description": "An array of block base fees per gas. This includes the next block after the newest of the returned range.",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/uint"
                            }
                        },
                        "reward": {
                            "title": "reward",
                            "description": "A two-dimensional array of effective priority fees per gas at the requested block percentiles.",
                            "type": "array",
                            "items": {
                                "title": "rewardPercentile",
                                "description": "An array of effective priority fee per gas data points from a single block. All zeroes are returned if the block is empty.",
                                "type": "array",
                                "items": {
                                    "title": "rewardPercentile",
                                    "description": "A given percentile sample of effective priority fees per gas from a single block in ascending order, weighted by gas used. Zeroes are returned if the block is empty.",
                                    "$ref": "#/components/schemas/uint"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "eth_gasPrice",
            "summary": "Returns the current price per gas in weibars.",
            "params": [],
            "result": {
                "name": "Gas price",
                "schema": {
                    "title": "Gas price",
                    "$ref": "#/components/schemas/uint"
                }
            }
        },
        {
            "name": "eth_getBalance",
            "summary": "Returns the balance of the account of given address.",
            "params": [
                {
                    "name": "Address",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/address"
                    }
                },
                {
                    "name": "Block",
                    "required": false,
                    "schema": {
                        "$ref": "#/components/schemas/BlockNumberOrTag"
                    }
                }
            ],
            "result": {
                "name": "Balance",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "$ref": "#/components/schemas/uint"
                }
            }
        },
        {
            "name": "eth_getBlockByHash",
            "summary": "Returns information about a block by hash.",
            "params": [
                {
                    "name": "Block hash",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/hash32"
                    }
                },
                {
                    "name": "Hydrated transactions",
                    "required": true,
                    "schema": {
                        "title": "hydrated",
                        "type": "boolean"
                    }
                }
            ],
            "result": {
                "name": "Block information",
                "schema": {
                    "$ref": "#/components/schemas/Block"
                }
            }
        },
        {
            "name": "eth_getBlockByNumber",
            "summary": "Returns information about a block by number.",
            "params": [
                {
                    "name": "Block",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/BlockNumberOrTag"
                    }
                },
                {
                    "name": "Hydrated transactions",
                    "required": true,
                    "schema": {
                        "title": "hydrated",
                        "type": "boolean"
                    }
                }
            ],
            "result": {
                "name": "Block information",
                "schema": {
                    "$ref": "#/components/schemas/Block"
                }
            }
        },
        {
            "name": "eth_getBlockTransactionCountByHash",
            "summary": "Returns the number of transactions in a block from a block matching the given block hash.",
            "params": [
                {
                    "name": "Block hash",
                    "schema": {
                        "$ref": "#/components/schemas/hash32"
                    }
                }
            ],
            "result": {
                "name": "Transactions count",
                "schema": {
                    "$ref": "#/components/schemas/uint"
                }
            }
        },
        {
            "name": "eth_getBlockTransactionCountByNumber",
            "summary": "Returns the number of transactions in a block matching the given block number.",
            "params": [
                {
                    "name": "Block",
                    "schema": {
                        "$ref": "#/components/schemas/BlockNumberOrTag"
                    }
                }
            ],
            "result": {
                "name": "Transactions count",
                "schema": {
                    "$ref": "#/components/schemas/uint"
                }
            }
        },
        {
            "name": "eth_getCode",
            "summary": "Returns code at a given address.",
            "params": [
                {
                    "name": "Address",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/address"
                    }
                },
                {
                    "name": "Block",
                    "required": false,
                    "schema": {
                        "$ref": "#/components/schemas/BlockNumberOrTag"
                    }
                }
            ],
            "result": {
                "name": "Bytecode",
                "schema": {
                    "$ref": "#/components/schemas/bytes"
                }
            }
        },
        {
            "name": "eth_getLogs",
            "summary": "Returns an array of all logs matching filter with given id.",
            "params": [
                {
                    "name": "Filter",
                    "schema": {
                        "$ref": "#/components/schemas/Filter"
                    }
                }
            ],
            "result": {
                "name": "Log objects",
                "schema": {
                    "$ref": "#/components/schemas/FilterResults"
                }
            }
        },
        {
            "name": "eth_getTransactionByBlockHashAndIndex",
            "summary": "Returns information about a transaction by block hash and transaction index position.",
            "params": [
                {
                    "name": "Block hash",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/hash32"
                    }
                },
                {
                    "name": "Transaction index",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/uint"
                    }
                }
            ],
            "result": {
                "name": "Transaction information",
                "schema": {
                    "$ref": "#/components/schemas/TransactionInfo"
                }
            }
        },
        {
            "name": "eth_getTransactionByBlockNumberAndIndex",
            "summary": "Returns information about a transaction by block number and transaction index position.",
            "params": [
                {
                    "name": "Block",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/BlockNumberOrTag"
                    }
                },
                {
                    "name": "Transaction index",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/uint"
                    }
                }
            ],
            "result": {
                "name": "Transaction information",
                "schema": {
                    "$ref": "#/components/schemas/TransactionInfo"
                }
            }
        },
        {
            "name": "eth_getTransactionByHash",
            "summary": "Returns the information about a transaction requested by transaction hash.",
            "params": [
                {
                    "name": "Transaction hash",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/hash32"
                    }
                }
            ],
            "result": {
                "name": "Transaction information",
                "schema": {
                    "$ref": "#/components/schemas/TransactionInfo"
                }
            }
        },
        {
            "name": "eth_getTransactionCount",
            "summary": "Returns the number of transactions sent from an address.",
            "params": [
                {
                    "name": "Address",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/address"
                    }
                },
                {
                    "name": "Block",
                    "required": false,
                    "schema": {
                        "$ref": "#/components/schemas/BlockNumberOrTag"
                    }
                }
            ],
            "result": {
                "name": "Transaction count",
                "schema": {
                    "title": "Transaction count",
                    "$ref": "#/components/schemas/uint"
                }
            }
        },
        {
            "name": "eth_getTransactionReceipt",
            "summary": "Returns the receipt of a transaction by transaction hash.",
            "params": [
                {
                    "name": "Transaction hash",
                    "schema": {
                        "$ref": "#/components/schemas/hash32"
                    }
                }
            ],
            "result": {
                "name": "Receipt Information",
                "schema": {
                    "$ref": "#/components/schemas/ReceiptInfo"
                }
            }
        },
        {
            "name": "eth_getUncleByBlockHashAndIndex",
            "summary": "Returns information about a uncle of a block by hash and uncle index position.",
            "params": [],
            "result": {
                "name": "Always returns null. There are no uncles in Hedera.",
                "schema": {
                    "$ref": "#/components/schemas/null"
                }
            }
        },
        {
            "name": "eth_getUncleByBlockNumberAndIndex",
            "summary": "Returns information about a uncle of a block by number and uncle index position.",
            "params": [],
            "result": {
                "name": "Always returns null. There are no uncles in Hedera.",
                "schema": {
                    "$ref": "#/components/schemas/null"
                }
            }
        },
        {
            "name": "eth_getUncleCountByBlockHash",
            "summary": "Returns the number of uncles in a block from a block matching the given block hash.",
            "params": [],
            "result": {
                "name": "Always returns '0x0'. There are no uncles in Hedera.",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "0x0"
                }
            }
        },
        {
            "name": "eth_getUncleCountByBlockNumber",
            "summary": "Returns the number of transactions in a block matching the given block number.",
            "params": [],
            "result": {
                "name": "Always returns '0x0'. There are no uncles in Hedera.",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "0x0"
                }
            }
        },
        {
            "name": "eth_getWork",
            "summary": "Always returns UNSUPPORTED_METHOD error.",
            "params": [],
            "result": {
                "$ref": "#/components/schemas/unsupportedError"
            }
        },
        {
            "name": "eth_hashrate",
            "summary": "Returns the number of hashes per second that the node is mining with. Always returns 0x0.",
            "params": [],
            "result": {
                "name": "Mining status",
                "schema": {
                    "title": "Hashrate",
                    "type": "string",
                    "pattern": "0x0"
                }
            }
        },
        {
            "name": "eth_maxPriorityFeePerGas",
            "summary": "Returns a fee per gas that is an estimate of how much you can pay as a priority fee, or 'tip', to get a transaction included in the current block.",
            "params": [],
            "result": {
                "name": "Always returns '0x0'. Hedera doesn't have a concept of tipping nodes to promote any behavior",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "0x0"
                }
            }
        },
        {
            "name": "eth_mining",
            "summary": "Returns whether the client is a miner. We don't mine, so this always returns false.",
            "params": [],
            "result": {
                "name": "Mining status",
                "schema": {
                    "title": "miningStatus",
                    "type": "boolean"
                }
            }
        },
        {
            "name": "eth_protocolVersion",
            "summary": "Always returns UNSUPPORTED_METHOD error.",
            "params": [],
            "result": {
                "$ref": "#/components/schemas/unsupportedError"
            }
        },
        {
            "name": "eth_sendRawTransaction",
            "summary": "Submits a raw transaction.",
            "params": [
                {
                    "name": "Transaction",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/bytes"
                    }
                }
            ],
            "result": {
                "name": "Transaction hash",
                "schema": {
                    "$ref": "#/components/schemas/hash32"
                }
            }
        },
        {
            "name": "eth_sendTransaction",
            "summary": "Always returns UNSUPPORTED_METHOD error.",
            "params": [],
            "result": {
                "$ref": "#/components/schemas/unsupportedError"
            }
        },
        {
            "name": "eth_signTransaction",
            "summary": "Always returns UNSUPPORTED_METHOD error.",
            "params": [],
            "result": {
                "$ref": "#/components/schemas/unsupportedError"
            }
        },
        {
            "name": "eth_sign",
            "summary": "Always returns UNSUPPORTED_METHOD error.",
            "params": [],
            "result": {
                "$ref": "#/components/schemas/unsupportedError"
            }
        },
        {
            "name": "eth_submitHashrate",
            "summary": "Always returns UNSUPPORTED_METHOD error.",
            "params": [],
            "result": {
                "$ref": "#/components/schemas/unsupportedError"
            }
        },
        {
            "name": "eth_submitWork",
            "summary": "Used for submitting a proof-of-work solution.",
            "params": [],
            "result": {
                "name": "PoW solution",
                "schema": {
                    "title": "No proof-of-work",
                    "description": "Always returns false.",
                    "type": "boolean"
                }
            }
        },
        {
            "name": "eth_syncing",
            "summary": "Returns syncing status",
            "params": [],
            "result": {
                "name": "Syncing status",
                "schema": {
                    "title": "Not syncing",
                    "description": "Always returns false.",
                    "type": "boolean"
                }
            }
        },
        {
            "name": "net_listening",
            "summary": "Returns true if client is actively listening for network connections.",
            "params": [],
            "result": {
                "name": "Listening status.",
                "schema": {
                    "title": "Not listening",
                    "description": "Always returns false.",
                    "type": "boolean"
                }
            }
        },
        {
            "name": "net_version",
            "summary": "Returns the current chain id.",
            "params": [],
            "result": {
                "name": "The current chain id.",
                "schema": {
                    "$ref": "#/components/schemas/uint"
                }
            }
        },
        {
            "name": "web3_clientVersion",
            "summary": "Returns the current client version.",
            "params": [],
            "result": {
                "name": "The current client version.",
                "schema": {
                    "type": "string",
                    "pattern": "relay\/[0-9]\\.[0-9]\\.[0-9]"
                }
            }
        }
    ],
    "components": {
        "schemas": {
            "address": {
                "title": "hex encoded address",
                "type": "string",
                "pattern": "^0x[0-9,a-f,A-F]{40}$"
            },
            "addresses": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/address"
                }
            },
            "byte": {
                "title": "hex encoded byte",
                "type": "string",
                "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
            },
            "bytes": {
                "title": "hex encoded bytes",
                "type": "string",
                "pattern": "^0x[0-9a-f]*$"
            },
            "bytes8": {
                "title": "8 hex encoded bytes",
                "type": "string",
                "pattern": "^0x[0-9a-f]{16}$"
            },
            "bytes32": {
                "title": "32 hex encoded bytes",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
            },
            "bytes256": {
                "title": "256 hex encoded bytes",
                "type": "string",
                "pattern": "^0x[0-9a-f]{512}$"
            },
            "bytes65": {
                "title": "65 hex encoded bytes",
                "type": "string",
                "pattern": "^0x[0-9a-f]{512}$"
            },
            "uint": {
                "title": "hex encoded unsigned integer",
                "type": "string",
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
            },
            "uint256": {
                "title": "hex encoded unsigned integer",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
            },
            "hash32": {
                "title": "32 byte hex value",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
            },
            "null": {
                "title": "null value",
                "type": "null",
                "pattern": "null"
            },
            "Block": {
                "title": "Block object",
                "type": "object",
                "required": [
                    "parentHash",
                    "sha3Uncles",
                    "miner",
                    "stateRoot",
                    "transactionsRoot",
                    "receiptsRoot",
                    "logsBloom",
                    "number",
                    "gasLimit",
                    "gasUsed",
                    "timestamp",
                    "extraData",
                    "mixHash",
                    "nonce",
                    "size",
                    "transactions",
                    "uncles"
                ],
                "properties": {
                    "parentHash": {
                        "title": "Parent block hash",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "sha3Uncles": {
                        "title": "Ommers hash",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "miner": {
                        "title": "Coinbase",
                        "$ref": "#/components/schemas/address"
                    },
                    "stateRoot": {
                        "title": "State root",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "transactionsRoot": {
                        "title": "Transactions root",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "receiptsRoot": {
                        "title": "Receipts root",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "logsBloom": {
                        "title": "Bloom filter",
                        "$ref": "#/components/schemas/bytes256"
                    },
                    "difficulty": {
                        "title": "Difficulty",
                        "$ref": "#/components/schemas/bytes"
                    },
                    "number": {
                        "title": "Number",
                        "$ref": "#/components/schemas/uint"
                    },
                    "gasLimit": {
                        "title": "Gas limit",
                        "$ref": "#/components/schemas/uint"
                    },
                    "gasUsed": {
                        "title": "Gas used",
                        "$ref": "#/components/schemas/uint"
                    },
                    "timestamp": {
                        "title": "Timestamp",
                        "$ref": "#/components/schemas/uint"
                    },
                    "extraData": {
                        "title": "Extra data",
                        "$ref": "#/components/schemas/bytes"
                    },
                    "mixHash": {
                        "title": "Mix hash",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "nonce": {
                        "title": "Nonce",
                        "$ref": "#/components/schemas/bytes8"
                    },
                    "totalDifficulty": {
                        "title": "Total difficult",
                        "$ref": "#/components/schemas/uint"
                    },
                    "baseFeePerGas": {
                        "title": "Base fee per gas",
                        "$ref": "#/components/schemas/uint"
                    },
                    "size": {
                        "title": "Block size",
                        "$ref": "#/components/schemas/uint"
                    },
                    "transactions": {
                        "anyOf": [
                            {
                                "title": "Transaction hashes",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/hash32"
                                }
                            },
                            {
                                "title": "Full transactions",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TransactionSigned"
                                }
                            }
                        ]
                    },
                    "uncles": {
                        "title": "Uncles",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/hash32"
                        }
                    }
                }
            },
            "BlockTag": {
                "type": "string",
                "enum": [
                    "earliest",
                    "latest",
                    "pending"
                ],
                "description": "`earliest`: The lowest numbered block the client has available; `latest` | `pending`: The most recent block."
            },
            "BlockNumberOrTag": {
                "title": "Block number or tag",
                "oneOf": [
                    {
                        "title": "Block number",
                        "$ref": "#/components/schemas/uint"
                    },
                    {
                        "title": "Block tag",
                        "$ref": "#/components/schemas/BlockTag"
                    }
                ]
            },
            "TransactionWithSender": {
                "title": "Transaction object with sender",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "from"
                        ],
                        "properties": {
                            "from": {
                                "title": "from",
                                "$ref": "#/components/schemas/address"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/TransactionUnsigned"
                    }
                ]
            },
            "Transaction1559Unsigned": {
                "type": "object",
                "title": "EIP-1559 transaction.",
                "required": [
                    "type",
                    "nonce",
                    "gas",
                    "value",
                    "input",
                    "maxFeePerGas",
                    "maxPriorityFeePerGas",
                    "chainId",
                    "accessList"
                ],
                "properties": {
                    "type": {
                        "title": "type",
                        "$ref": "#/components/schemas/byte"
                    },
                    "nonce": {
                        "title": "nonce",
                        "$ref": "#/components/schemas/uint"
                    },
                    "to": {
                        "title": "to address",
                        "$ref": "#/components/schemas/address"
                    },
                    "gas": {
                        "title": "gas limit",
                        "$ref": "#/components/schemas/uint"
                    },
                    "value": {
                        "title": "value",
                        "$ref": "#/components/schemas/uint"
                    },
                    "input": {
                        "title": "input data",
                        "$ref": "#/components/schemas/bytes"
                    },
                    "maxPriorityFeePerGas": {
                        "title": "max priority fee per gas",
                        "description": "Maximum fee per gas the sender is willing to pay to miners in wei",
                        "$ref": "#/components/schemas/uint"
                    },
                    "maxFeePerGas": {
                        "title": "max fee per gas",
                        "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
                        "$ref": "#/components/schemas/uint"
                    },
                    "accessList": {
                        "title": "accessList",
                        "description": "not supported",
                        "$ref": "#/components/schemas/null"
                    },
                    "chainId": {
                        "title": "chainId",
                        "description": "Chain ID that this transaction is valid on.",
                        "$ref": "#/components/schemas/uint"
                    }
                }
            },
            "TransactionLegacyUnsigned": {
                "type": "object",
                "title": "Legacy transaction.",
                "required": [
                    "type",
                    "nonce",
                    "gas",
                    "value",
                    "input",
                    "gasPrice"
                ],
                "properties": {
                    "type": {
                        "title": "type",
                        "$ref": "#/components/schemas/byte"
                    },
                    "nonce": {
                        "title": "nonce",
                        "$ref": "#/components/schemas/uint"
                    },
                    "to": {
                        "title": "to address",
                        "$ref": "#/components/schemas/address"
                    },
                    "gas": {
                        "title": "gas limit",
                        "$ref": "#/components/schemas/uint"
                    },
                    "value": {
                        "title": "value",
                        "$ref": "#/components/schemas/uint"
                    },
                    "input": {
                        "title": "input data",
                        "$ref": "#/components/schemas/bytes"
                    },
                    "gasPrice": {
                        "title": "gas price",
                        "description": "The gas price willing to be paid by the sender in wei",
                        "$ref": "#/components/schemas/uint"
                    },
                    "chainId": {
                        "title": "chainId",
                        "description": "Chain ID that this transaction is valid on.",
                        "$ref": "#/components/schemas/uint"
                    }
                }
            },
            "Transaction1559Signed": {
                "title": "Signed 1559 Transaction",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Transaction1559Unsigned"
                    },
                    {
                        "title": "EIP-1559 transaction signature properties.",
                        "required": [
                            "yParity",
                            "r",
                            "s"
                        ],
                        "properties": {
                            "yParity": {
                                "title": "yParity",
                                "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
                                "$ref": "#/components/schemas/uint"
                            },
                            "r": {
                                "title": "r",
                                "$ref": "#/components/schemas/uint"
                            },
                            "s": {
                                "title": "s",
                                "$ref": "#/components/schemas/uint"
                            }
                        }
                    }
                ]
            },
            "TransactionUnsigned": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Transaction1559Unsigned"
                    },
                    {
                        "$ref": "#/components/schemas/TransactionLegacyUnsigned"
                    }
                ]
            },
            "TransactionLegacySigned": {
                "title": "Signed Legacy Transaction",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TransactionLegacyUnsigned"
                    },
                    {
                        "title": "Legacy transaction signature properties.",
                        "required": [
                            "v",
                            "r",
                            "s"
                        ],
                        "properties": {
                            "v": {
                                "title": "v",
                                "$ref": "#/components/schemas/uint"
                            },
                            "r": {
                                "title": "r",
                                "$ref": "#/components/schemas/uint"
                            },
                            "s": {
                                "title": "s",
                                "$ref": "#/components/schemas/uint"
                            }
                        }
                    }
                ]
            },
            "TransactionSigned": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Transaction1559Signed"
                    },
                    {
                        "$ref": "#/components/schemas/TransactionLegacySigned"
                    }
                ]
            },
            "TransactionInfo": {
                "type": "object",
                "title": "Transaction information",
                "allOf": [
                    {
                        "title": "Contextual information",
                        "required": [
                            "blockHash",
                            "blockNumber",
                            "from",
                            "hash",
                            "transactionIndex"
                        ],
                        "properties": {
                            "blockHash": {
                                "title": "block hash",
                                "$ref": "#/components/schemas/hash32"
                            },
                            "blockNumber": {
                                "title": "block number",
                                "$ref": "#/components/schemas/uint"
                            },
                            "from": {
                                "title": "from address",
                                "$ref": "#/components/schemas/address"
                            },
                            "hash": {
                                "title": "transaction hash",
                                "$ref": "#/components/schemas/hash32"
                            },
                            "transactionIndex": {
                                "title": "transaction index",
                                "$ref": "#/components/schemas/uint"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/TransactionSigned"
                    }
                ]
            },
            "Log": {
                "title": "log",
                "type": "object",
                "required": [
                    "transactionHash"
                ],
                "properties": {
                    "removed": {
                        "title": "removed",
                        "type": "boolean"
                    },
                    "logIndex": {
                        "title": "log index",
                        "$ref": "#/components/schemas/uint"
                    },
                    "transactionIndex": {
                        "title": "transaction index",
                        "$ref": "#/components/schemas/uint"
                    },
                    "transactionHash": {
                        "title": "transaction hash",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "blockHash": {
                        "title": "block hash",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "blockNumber": {
                        "title": "block number",
                        "$ref": "#/components/schemas/uint"
                    },
                    "address": {
                        "title": "address",
                        "$ref": "#/components/schemas/address"
                    },
                    "data": {
                        "title": "data",
                        "$ref": "#/components/schemas/bytes"
                    },
                    "topics": {
                        "title": "topics",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bytes32"
                        }
                    }
                }
            },
            "ReceiptInfo": {
                "type": "object",
                "title": "Receipt info",
                "required": [
                    "blockHash",
                    "blockNumber",
                    "from",
                    "cumulativeGasUsed",
                    "gasUsed",
                    "logs",
                    "logsBloom",
                    "transactionHash",
                    "transactionIndex",
                    "effectiveGasPrice"
                ],
                "properties": {
                    "transactionHash": {
                        "title": "transaction hash",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "transactionIndex": {
                        "title": "transaction index",
                        "$ref": "#/components/schemas/uint"
                    },
                    "blockHash": {
                        "title": "block hash",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "blockNumber": {
                        "title": "block number",
                        "$ref": "#/components/schemas/uint"
                    },
                    "from": {
                        "title": "from",
                        "$ref": "#/components/schemas/address"
                    },
                    "to": {
                        "title": "to",
                        "description": "Address of the receiver or null in a contract creation transaction.",
                        "$ref": "#/components/schemas/address"
                    },
                    "cumulativeGasUsed": {
                        "title": "cumulative gas used",
                        "description": "The sum of gas used by this transaction and all preceding transactions in the same block.",
                        "$ref": "#/components/schemas/uint"
                    },
                    "gasUsed": {
                        "title": "gas used",
                        "description": "The amount of gas used for this specific transaction alone.",
                        "$ref": "#/components/schemas/uint"
                    },
                    "contractAddress": {
                        "title": "contract address",
                        "description": "The contract address created, if the transaction was a contract creation, otherwise null.",
                        "$ref": "#/components/schemas/address"
                    },
                    "logs": {
                        "title": "logs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Log"
                        }
                    },
                    "logsBloom": {
                        "title": "logs bloom",
                        "$ref": "#/components/schemas/bytes256"
                    },
                    "root": {
                        "title": "state root",
                        "description": "The post-transaction state root. Only specified for transactions included before the Byzantium upgrade.",
                        "$ref": "#/components/schemas/bytes32"
                    },
                    "status": {
                        "title": "status",
                        "description": "Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade.",
                        "$ref": "#/components/schemas/uint"
                    },
                    "effectiveGasPrice": {
                        "title": "effective gas price",
                        "description": "The actual value per gas deducted from the senders account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas).",
                        "$ref": "#/components/schemas/uint"
                    }
                }
            },
            "FilterResults": {
                "title": "Filter results",
                "oneOf": [
                    {
                        "title": "new block hashes",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/hash32"
                        }
                    },
                    {
                        "title": "new transaction hashes",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/hash32"
                        }
                    },
                    {
                        "title": "new logs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Log"
                        }
                    }
                ]
            },
            "Filter": {
                "title": "filter",
                "type": "object",
                "properties": {
                    "fromBlock": {
                        "title": "from block",
                        "$ref": "#/components/schemas/uint"
                    },
                    "toBlock": {
                        "title": "to block",
                        "$ref": "#/components/schemas/uint"
                    },
                    "blockHash": {
                        "title": "Block hash",
                        "$ref": "#/components/schemas/hash32"
                    },
                    "address": {
                        "title": "Address(es)",
                        "oneOf": [
                            {
                                "title": "Address",
                                "$ref": "#/components/schemas/address"
                            },
                            {
                                "title": "Addresses",
                                "$ref": "#/components/schemas/addresses"
                            }
                        ]
                    },
                    "topics": {
                        "title": "Topics",
                        "$ref": "#/components/schemas/FilterTopics"
                    }
                }
            },
            "FilterTopics": {
                "title": "Filter Topics",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/FilterTopic"
                }
            },
            "FilterTopic": {
                "title": "Filter Topic List Entry",
                "oneOf": [
                    {
                        "title": "Any Topic Match",
                        "type": "null"
                    },
                    {
                        "title": "Single Topic Match",
                        "$ref": "#/components/schemas/bytes32"
                    },
                    {
                        "title": "Multiple Topic Match",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bytes32"
                        }
                    }
                ]
            },
            "unsupportedError": {
                "name": "Unsupported Error",
                "schema": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "title": "Error code",
                            "type": "number",
                            "pattern": "-32601"
                        },
                        "message": {
                            "title": "Error message",
                            "type": "string",
                            "pattern": "Unsupported JSON-RPC method"
                        },
                        "name": {
                            "title": "Error name",
                            "type": "string",
                            "pattern": "Method not found"
                        }
                    }
                }
            }
        }
    }
}
