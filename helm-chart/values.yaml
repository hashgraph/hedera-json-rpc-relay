# Default values for json-rpc-relay.

replicaCount: 2

image:
  repository: ghcr.io/hashgraph/hedera-json-rpc-relay
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 7546
  annotations: {}

ingress:
  enabled: false
  className: ''
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # It's recommended not to specify default resources and to leave this as a choice for the user.
  # This also increases chances charts run on environments with little resources, such as Minikube.
  #  If you do want to specify resources, uncomment use the following
  # lines, as an example then and remove the curly braces after 'resources:' above.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ports:
  name: jsonrpcrelay
  containerPort: 7546

config:
  # This value should be in decimal, not hexadecimal format.
  CHAIN_ID: ''
  MIRROR_NODE_URL: ''
  LOG_LEVEL: ''
  # Use config.local.HEDERA_NETWORK when running against a locally hosted hedera network
  # local:
  #   config.local.HEDERA_NETWORK should configured as a json set - {"$IPv4_ADDR_1:$PORT_1":"$ACCOUNT_ID_1","$IPv4_ADDR_2:$PORT_2":"$ACCOUNT_ID_2"}
  #   HEDERA_NETWORK: {"127.0.01:50211":"0.0.3"}
  #   HEDERA_NETWORK: ""
  # Use config.hosted.HEDERA_NETWORK when running against a hosted Hedera network.  Valid options are `previewnet`, `testnet`, and `mainnet`
  # hosted:
  #   HEDERA_NETWORK: ""
  OPERATOR_ID_MAIN: ''
  OPERATOR_KEY_MAIN: ''
  OPERATOR_ID_ETH_SENDRAWTRANSACTION: ''
  OPERATOR_KEY_ETH_SENDRAWTRANSACTION: ''
  DEFAULT_RATE_LIMIT: 200
  TIER_1_RATE_LIMIT: 100
  TIER_2_RATE_LIMIT: 200
  TIER_3_RATE_LIMIT: 400
  LIMIT_DURATION: 60000
  HBAR_RATE_LIMIT_TINYBAR: 5000000000
  HBAR_RATE_LIMIT_DURATION: 60000
  ETH_GET_LOGS_BLOCK_RANGE_LIMIT: 1000
  RATE_LIMIT_DISABLED: false
  DEV_MODE: false
  GAS_PRICE_TINY_BAR_BUFFER: 10000000000
  MIRROR_NODE_RETRIES: 3
  MIRROR_NODE_RETRY_DELAY: 500
  MIRROR_NODE_LIMIT_PARAM: 100
  CLIENT_TRANSPORT_SECURITY: false
  INPUT_SIZE_LIMIT: 1
  ETH_CALL_CACHE_TTL: 200
  CONSENSUS_MAX_EXECUTION_TIME: 15000

# Enable rolling_restarts if SDK calls fail this is usually due to stale connections that get cycled on restart
rolling_restart:
  enabled: false
  schedule: '@daily'

# Enable periodic tests of the hashio base URL
test:
  enabled: false
  schedule: '@daily'
  baseUrl: "http://127.0.0.1:7546"
