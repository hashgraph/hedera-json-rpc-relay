version: "3"
services:
  graph-node:
    image: graphprotocol/graph-node:v0.28.2
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8020:8020"
      - "8030:8030"
      - "8040:8040"
    depends_on:
      - ipfs
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs:5001"
      ethereum: "local:http://host.docker.internal:7546"
      GRAPH_LOG: debug
      ETHEREUM_REORG_THRESHOLD: 0
      ETHEREUM_POLLING_INTERVAL: 1000
      GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: 10
      ETHEREUM_BLOCK_BATCH_SIZE: 1
      GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE: 1000
      GRAPH_ETHEREUM_MAX_EVENT_ONLY_RANGE: 50
      GRAPH_ETHEREUM_BLOCK_INGESTOR_MAX_CONCURRENT_JSON_RPC_CALLS_FOR_TXN_RECEIPTS: 100
      GRAPH_ETHEREUM_GENESIS_BLOCK_NUMBER: 1
    restart: unless-stopped
  ipfs:
    image: ipfs/go-ipfs:v0.10.0
    ports:
      - "5001:5001"
    volumes:
      - ./data/ipfs:/data/ipfs
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      PGDATA: "/data/postgres"
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
